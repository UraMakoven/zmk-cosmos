/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/outputs.h>

#define AS(keycode) &as LS(keycode) keycode     // Autoshift Macro

/ {
    behaviors {
        as: auto_shift {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping_term_ms = <175>;
            quick_tap_ms = <50>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <50>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    macros {
        email: email {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&kp LCTRL>,
                <&macro_pause_for_release>,
                <&kp U &kp R &kp A &kp DOT &kp M &kp A &kp K &kp O &kp V &kp E &kp N &kp AT &kp G &kp M &kp A &kp I &kp L &kp DOT &kp C &kp O &kp M &kp TAB>;

            label = "EMAIL";
            tap-ms = <20>;
        };
    };
  
    keymap {
        compatible = "zmk,keymap";

        default_layer {
// ------------------------------------------------------------------------------------------------------------
// |  ESC  |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |   `   |
// |  TAB  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   |   -   |
// |  CTRL |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
// | SHIFT |  Z  |  X  |  C   |  V   |  B   |   "["  |  |  "]"  |  N   |  M    |  ,    |  .   |   /   | SHIFT |
//                     | ALT  | GUI  | LOWER|  SPACE |  | ENTER | RAISE| BSPC  | GUI   |
            bindings = <
AS(GRAVE)    AS(N1) AS(N2) AS(N3) AS(N4) AS(N5)                               AS(N6) AS(N7) AS(   N8) AS( N9) AS(  N0) AS(RBKT)
AS(  TAB)    AS( Q) AS( W) AS( E) AS( R) AS( T)                               AS( Y) AS( U) AS(    I) AS(  O) AS(   P) AS(LBKT)
&mt LGUI ESC AS( A) AS( S) AS( D) AS( F) AS( G)                               AS( H) AS( J) AS(    K) AS(  L) AS(SEMI) AS( SQT)
&mo 2        AS( Z) AS( X) AS( C) AS( V) AS( B) &kp K_MUTE   &kp C_PLAY_PAUSE AS( N) AS( M) AS(COMMA) AS(DOT) AS(FSLH) AS(BSLH)
                &kp KP_DIVIDE &kp KP_MULTIPLY                                                          &kp MINUS &kp EQUAL
                              &mo 1 &kp LSHFT &kp LALT               &hm RALT DEL &hm RSHFT BSPC &lt 1 ENTER
                                    &kp LCTRL &kp SPACE              &kp SPACE &kp RCTRL
            >;

            sensor-bindings = 
                <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp  PG_UP PG_DN>
                ;
        };

        lower_layer {
// ------------------------------------------------------------------------------------------------------------
// | BTCLR | BT1 | BT2 |  BT3 |  BT4 |  BT5 |                   |      |       |       |      |       |       |
// |  F1   |  F2 |  F3 |  F4  |  F5  |  F6  |                   |  F7  |  F8   |  F9   |  F10 |  F11  |  F12  |
// |   `   |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   ~   |
// |       |     |     |      |      |      |        |  |       |      |  _    |  +    |  {   |   }   |  "|"  |
//                     |      |      |      |        |  |       |      |       |       |
            bindings = <
&trans &kp F1          &kp F2    &kp F3    &kp F4     &kp F5                       &kp F6        &kp F7    &kp F8     &kp F9    &kp F10   &kp F11
&trans &kp KP_MULTIPLY &kp KP_N7 &kp KP_N8 &kp KP_N9  &kp KP_PLUS                  &kp LC(LA(T)) &kp HOME  &kp UP     &kp END   &kp PG_UP &kp F12
&trans &kp KP_DIVIDE   &kp KP_N4 &kp KP_N5 &kp KP_N6  &kp KP_MINUS                 &kp LA(F2)    &kp LEFT  &kp DOWN   &kp RIGHT &kp PG_DN &kp CAPS
&trans &kp KP_N0       &kp KP_N1 &kp KP_N2 &kp KP_N3  &kp KP_DOT   &trans   &trans &trans        &kp PSCRN &kp K_CALC &kp K_APP &kp INS   &kp RGUI
                    &trans  &trans                                                                                &trans &trans   
                                              &trans &trans &trans             &trans &trans &trans
                                                     &trans &trans             &trans &trans
            >;

            sensor-bindings = 
                <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp  PG_UP PG_DN>
                ;
        };

        raise_layer {
// ------------------------------------------------------------------------------------------------------------
// |       |     |     |      |      |      |                   |      |       |       |      |       |       |
// |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |   7   |   8   |  9   |   0   |       |
// |   F1  |  F2 |  F3 |  F4  |  F5  |  F6  |                   |      |   <-  |   v   |  ^   |  ->   |       |
// |   F7  |  F8 |  F9 |  F10 |  F11 |  F12 |        |  |       |  +   |   -   |   =   |  [   |   ]   |   \   |
//                     |      |      |      |        |  |       |      |       |       |
            bindings = <
&bt BT_CLR   &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4        &kp F6        &kp F7    &kp F8     &kp F9    &kp F10   &kp F11
&out OUT_TOG &kp KP_MULTIPLY &kp KP_N7 &kp KP_N8 &kp KP_N9  &kp KP_PLUS                  &kp LC(LA(T)) &kp HOME  &kp UP     &kp END   &kp PG_UP &kp F12
&bootloader  &kp KP_DIVIDE   &kp KP_N4 &kp KP_N5 &kp KP_N6  &kp KP_MINUS                 &kp LA(F2)    &kp LEFT  &kp DOWN   &kp RIGHT &kp PG_DN &kp CAPS
&trans       &kp KP_N0       &kp KP_N1 &kp KP_N2 &kp KP_N3  &kp KP_DOT   &trans   &trans &trans        &kp PSCRN &kp K_CALC &kp K_APP &kp INS   &kp RGUI
                    &trans  &trans                                                                                &trans &trans   
                                              &trans &trans &trans             &trans &trans &trans
                                                     &trans &trans             &trans &trans
            >;

            sensor-bindings = 
                <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp  PG_UP PG_DN>
                ;
        };
    };
};
